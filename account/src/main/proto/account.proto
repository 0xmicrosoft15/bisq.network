/*
 * This file is part of Bisq.
 *
 * Bisq is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * Bisq is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Bisq. If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package account;
option java_package = "bisq.account.protobuf";
option java_multiple_files = true;

import "common.proto";

// ProtocolType
enum TradeProtocolType {
  BISQ_EASY = 0;
  MULTISIG = 1;
  SUBMARINE = 2;
  MULTISIG_LIQUID = 3;
  LIQUID_SWAP = 4;
  BSQ_SWAP = 5;
  LIGHTNING_X = 6;
  MONERO_SWAP = 7;
}
enum LoanProtocolType {
  COLLATERALIZED = 0;
  REPUTATION = 1;
}
message ProtocolType {
  oneof message {
    TradeProtocolType tradeProtocolType = 10;
    LoanProtocolType loanProtocolType = 11;
  }
}

// PaymentMethod
message PaymentMethod {
  string name = 1;
  oneof message {
    FiatPaymentMethod fiatPaymentMethod = 10;
    BitcoinPaymentMethod bitcoinPaymentMethod = 11;
    CryptoPaymentMethod cryptoPaymentMethod = 12;
  }
}
message FiatPaymentMethod {
}
message BitcoinPaymentMethod {
}
message CryptoPaymentMethod {
  string currencyCode = 1;
}

// AccountPayload
message AccountPayload {
  string id = 1;
  string paymentMethodName = 2;
  oneof message {
    UserDefinedFiatAccountPayload userDefinedFiatAccountPayload = 20;
    RevolutAccountPayload RevolutAccountPayload = 21;
    CountryBasedAccountPayload countryBasedAccountPayload = 22;
  }
}
message UserDefinedFiatAccountPayload {
  string accountData = 2;
}
message RevolutAccountPayload {
  string email = 2;
}
message CountryBasedAccountPayload {
  string countryCode = 1;
  oneof message {
    SepaAccountPayload sepaAccountPayload = 10;
  }
}
message SepaAccountPayload {
  string holderName = 1;
  string iban = 2;
  string bic = 3;

}


// Account
message Account {
  sint64 creationDate = 1;
  string accountName = 2;
  AccountPayload accountPayload = 3;
  PaymentMethod paymentMethod = 4;
  common.TradeCurrency selectedTradeCurrency = 6;

  oneof message {
    UserDefinedFiatAccount userDefinedFiatAccount = 20;
    RevolutAccount revolutAccount = 21;
    CountryBasedAccount countryBasedAccount = 22;
  }
}

message UserDefinedFiatAccount {
}
message RevolutAccount {
}
message CountryBasedAccount {
  common.Country country = 1;
  oneof message {
    SepaAccount sepaAccount = 20;
  }
}
message SepaAccount {
}

message AccountStore {
  map<string, Account> accountByName = 1;
  optional Account selectedAccount = 2;
}

