/*
 * This file is part of Bisq.
 *
 * Bisq is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * Bisq is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Bisq. If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package chat;
option java_package = "bisq.chat.protobuf";
option java_multiple_files = true;
import "common.proto";
import "network.proto";
import "security.proto";
import "offer.proto";
import "user.proto";

message Quotation {
  string nym = 1;
  string nickName = 2;
  bytes pubKeyHash = 3;
  string message = 4;
}

message ChatMessage {
  string channelId = 1;
  optional string text = 2;
  string authorId = 3;
  optional Quotation quotation = 4;
  uint64 date = 5;
  bool wasEdited = 6;
  network.MetaData metaData = 7;
  oneof message {
    PrivateTradeChatMessage privateTradeChatMessage = 20;
    PrivateDiscussionChatMessage privateDiscussionChatMessage = 21;
    PublicTradeChatMessage publicTradeChatMessage = 22;
    PublicDiscussionChatMessage publicDiscussionChatMessage = 23;
  }
}

enum ChannelNotificationType {
  ALL = 0;
  MENTION = 1;
  NEVER = 2;
}

message Channel {
  string id = 1;
  ChannelNotificationType channelNotificationType = 2;
  oneof message{
    PrivateTradeChannel privateTradeChannel = 10;
    PrivateDiscussionChannel privateDiscussionChannel = 11;
    PublicTradeChannel publicTradeChannel = 12;
    PublicDiscussionChannel publicDiscussionChannel = 13;
  }
}

// Trade
message PrivateTradeChatMessage {
  string receiversId = 1;
  user.UserProfile sender = 2;
}
message TradeChatOffer {
  offer.Direction direction = 1;
  common.Market market = 2;
  uint64 baseSideAmount = 3;
  uint64 quoteSideAmount = 4;
  repeated string paymentMethods = 5;
  string makersTradeTerms = 6;
  uint64 requiredTotalReputationScore = 7;
}

message PublicTradeChatMessage {
  optional TradeChatOffer tradeChatOffer = 1;
}

message PrivateTradeChannel {
  user.UserProfile peer = 1;
  user.UserIdentity myUserIdentity = 2;
  repeated ChatMessage chatMessages = 3;
}

message PublicTradeChannel {
  common.Market market = 1;
}

message TradeChannelSelectionStore {
  optional Channel selectedChannel = 1;
}

message PrivateTradeChannelStore {
  repeated Channel channels = 1;
}

message PublicTradeChannelStore {
  repeated Channel channels = 1;
  repeated string visibleChannelIds = 2;
}

// Discussion
message PrivateDiscussionChatMessage {
  string receiversId = 1;
  user.UserProfile sender = 2;
}
message PublicDiscussionChatMessage {
}
message PrivateDiscussionChannel {
  user.UserProfile peer = 1;
  user.UserIdentity myUserIdentity = 2;
  repeated ChatMessage chatMessages = 3;
}

message PublicDiscussionChannel {
  string channelName = 1;
  string description = 2;
  string channelAdminId = 3;
  repeated string channelModeratorIds = 4;
  bool isVisible = 5;
}

message DiscussionChannelSelectionStore {
  optional Channel selectedChannel = 1;
}

message PrivateDiscussionChannelStore {
  repeated Channel channels = 1;
}

message PublicDiscussionChannelStore {
  repeated Channel channels = 1;
}
