################################################################################
#
# User module
#
################################################################################

user.reputation.score.tooltip=Score: {0}\n\Ranking: {1}
user.userProfile.tooltip=Nickname: {0}\nBot ID: {1}\nProfile ID: {2}


################################################################################
#
# Desktop module / User (options) section
#
################################################################################

user.headline=User options

user.userProfile=User profile
user.password=Password
user.paymentAccounts=Payment accounts
user.reputation=Reputation
user.roles=Bonded roles


################################################################################
# User profile
################################################################################

user.userProfile.select=Select user profile
user.userProfile.comboBox.description=User profile
user.userProfile.nymId=Bot ID
user.userProfile.nymId.tooltip=\
  The 'Bot ID' is generated from the hash of the public key of that\n\
  user profiles identity.\n\
  It is appended to the nickname in case there are multiple user profiles in\n\
  the network with the same nickname to distinct clearly between those profiles.
user.userProfile.profileId=Profile ID
user.userProfile.profileId.tooltip=\
  The 'Profile ID' is the hash of the public key of that user profiles identity\n\
  encoded as hexadecimal string.
user.userProfile.profileAge=Profile age
user.userProfile.profileAge.tooltip=The 'Profile age' is the age in days of that user profile.
user.userProfile.reputation=Reputation
user.userProfile.statement=Statement
user.userProfile.statement.prompt=Enter optional statement
user.userProfile.terms=Trade terms
user.userProfile.terms.prompt=Enter optional trade terms

user.userProfile.createNewProfile=Create new profile
user.userProfile.deleteProfile=Delete this profile
user.userProfile.deleteProfile.warning=Do you really want to delete that user profile? You cannot un-do this operation.
user.userProfile.deleteProfile.warning.yes=Yes, delete my user profile
user.userProfile.deleteProfile.lastProfile.warning=Deleting user profile is not permitted. \
  There need to be at least one user profile set up. Please create first another user profile. Once you have more than one user \
  profiles you can delete this one.


################################################################################
# Create user profile
################################################################################

user.userProfile.new.step2.headline=Complete your profile
user.userProfile.new.step2.subTitle=You can optionally add a personalized statement to your profile and set your trade terms.
user.userProfile.new.statement=Statement
user.userProfile.new.statement.prompt=Optional add statement
user.userProfile.new.terms=Your trade terms
user.userProfile.new.terms.prompt=Optional set trade terms



################################################################################
# Password
################################################################################

user.password.headline.setPassword=Set password protection
user.password.headline.removePassword=Remove password protection
user.password.button.savePassword=Save password
user.password.button.removePassword=Remove password
user.password.enterPassword=Enter password (min. 8 characters)
user.password.confirmPassword=Confirm password
user.password.savePassword.success=Password protection enabled.
user.password.removePassword.success=Password protection removed.


################################################################################
# Payment accounts
################################################################################

user.paymentAccounts.accountData=Payment account info
user.paymentAccounts.selectAccount=Select payment account
user.paymentAccounts.createAccount=Create new payment account
user.paymentAccounts.deleteAccount=Delete payment account
user.paymentAccounts.createAccount.headline=Add new payment account
user.paymentAccounts.createAccount.subtitle=The payment account is stored only locally on your computer and \
  only sent to your trade peer if you decide to do so.
user.paymentAccounts.createAccount.accountName=Payment account name
user.paymentAccounts.createAccount.accountName.prompt=Set a unique name for your payment account
settings.paymentAccounts.createAccount.accountData=Payment account info
user.paymentAccounts.createAccount.accountData.prompt=Enter the payment account info (e.g. bank account data) you \
  want to share with a potential Bitcoin buyer so that they can transfer you the national currency amount.
user.paymentAccounts.createAccount.sameName=This account name is already used. Please use a different name.


################################################################################
# Reputation
################################################################################

user.reputation.headline=How to build up reputation
user.reputation.info=For Bitcoin sellers it's important to provide reputation to the buyer, because the buyer will send \
  the fiat amount first and need a reason why they should trust the seller.\n\
  Gaining reputation is intended for experienced Bisq users who are familiar with Bisq.\n\n\
  There are multiple options how to provide reputation:\n\n\
  1. Burning BSQ\n\
  2. Setting up a BSQ bond\n\
  3. Importing the account age from a Bisq 1 account\n\
  4. Importing the signed account age witness from a Bisq 1 account

user.reputation.source=Source of reputation

user.reputation.pubKeyHash=Profile ID
user.reputation.weight=Weight
user.reputation.score=Score
user.reputation.ageScore=Age score
user.reputation.totalScore=Total score
user.reputation.ranking=Ranking

user.reputation.burnBsq=Burning BSQ
user.reputation.burnedBsq.tab1=Why
user.reputation.burnedBsq.tab2=Score
user.reputation.burnedBsq.tab3=How-to
user.reputation.burnedBsq.infoHeadline=Skin in the game
user.reputation.burnedBsq.info=By burning BSQ you provide evidence that you invested money into your reputation.\n\
  The burn BSQ transaction contains the hash of the public key of your profile. \
  In case of malicious behaviour your profile might get banned by mediators and with that your investment into your reputation would become worthless.
user.reputation.burnedBsq.infoHeadline2=What is the recommended amount to burn?
user.reputation.burnedBsq.info2=That will be determined by the competition of sellers. The sellers with the highest reputation score will have better \
  trade opportunities and can get a higher price premium. The top 3 offers ranked by reputation will get promoted in the 'Buy Bitcoin' screen.\n\n\
  Amounts below 20 BSQ may not provide the minimum level of security required to build up trust with a buyer (this also depends on the market and traded amounts).\n\n\
  If burning BSQ is undesirable, consider the other available options for building up reputation.
user.reputation.burnedBsq.score.headline=Impact on reputation score
user.reputation.burnedBsq.score.info=Burning BSQ is considered the strongest form of reputation which is represented by the high weight factor. \
  The burned BSQ linearly decays to zero over a period of 30 days. \
  Periodical burning of smaller amounts represents a continuous long term engagement.\n\n\
  The reputation score is calculated as follows:

user.reputation.burnedBsq.score=Burned BSQ amount * decay factor
user.reputation.burnedBsq.ageScore=Amount * age in days
user.reputation.burnedBsq.totalScore=Score * weight + age score

user.reputation.burnedBsq.howToHeadline=Process for burning BSQ
user.reputation.burnedBsq.howTo=1. Select the user profile for which you want to attach the reputation.\n\
  2. Copy the 'profile ID'\n\
  3. Open Bisq 1 and go to 'DAO/PROOF OF BURN' and paste the copied value into the 'pre-image' field.\n\     \
  Enter the amount of BSQ you want to burn.\n\
  4. Publish the Burn BSQ transaction.\n\
  5. After blockchain confirmation your reputation will become visible in your profile.

user.reputation.bond=BSQ bonds
user.reputation.bond.tab1=Why
user.reputation.bond.tab2=Score
user.reputation.bond.tab3=How-to
user.reputation.bond.infoHeadline=Skin in the game
user.reputation.bond.info=By setting up a BSQ bond you provide evidence that you locked up money for gaining reputation.\n\
  The BSQ bond transaction contains the hash of the public key of your profile. \
  In case of malicious behaviour your bond could get confiscated by the DAO and your profile might get banned by mediators.
user.reputation.bond.infoHeadline2=What is the recommended amount and lock time?
user.reputation.bond.info2=The lock time need to be at least 10000 blocks which is about 70 days to be considered a valid bond. \
  The amount can be chosen by the user and will determine together with the lock time the ranking to other sellers. \
  The sellers with the highest reputation score will have better \
  trade opportunities and can get a higher price premium. The top 3 offers ranked by reputation will get promoted in the 'Buy Bitcoin' screen.\n\n\
  Amounts below 1000 BSQ might not provide the minimum level of security required to build up trust with a buyer (but it also depends on the market and traded amounts).\n\n\
  If a BSQ bond is too much of a hassle, consider the other available options for building up reputation.
user.reputation.bond.score.headline=Impact on reputation score
user.reputation.bond.score.info=Setting up a BSQ bond is considered a strong form of reputation which is represented by the weight factor. \
  Min lock time: 10000 blocks (about 70 days)\n\n\
  The reputation score is calculated as follows:

user.reputation.bond.score=Bonded BSQ amount * lock time / 10000
user.reputation.bond.ageScore=Score * age in days
user.reputation.bond.totalScore=Score * weight + age score

user.reputation.bond.howToHeadline=Process for setting up a BSQ bond
user.reputation.bond.howTo=1. Select the user profile for which you want to attach the reputation.\n\
  2. Copy the 'profile ID'\n\
  3. Open Bisq 1 and go to 'DAO/BONDING/BONDED REPUTATION' and paste the copied value into the 'salt' field.\n\     \
  Enter the amount of BSQ you want to lock up and the lock time (min. 10000 blocks).\n\
  4. Publish the lockup transaction.\n\
  5. After blockchain confirmation your reputation will become visible in your profile.

user.reputation.accountAge=Account age
user.reputation.accountAge.tab1=Why
user.reputation.accountAge.tab2=Score
user.reputation.accountAge.tab3=How-to
user.reputation.accountAge.infoHeadline=Provide trust
user.reputation.accountAge.info=By linking your Bisq 1 'account age' you can provide some level of trust.\n\n\
  There are some reasonable expectations that a user who has used Bisq for some time is an honest user. But \
  that expectation is weak compared to other forms of reputation where the user provides stronger proof with \
  the use of some financial resources.
user.reputation.accountAge.infoHeadline2=Privacy implications
user.reputation.accountAge.info2=Linking your Bisq 1 account with Bisq 2 has some implications on your privacy. \
  For verifying your 'account age' your Bisq 1 identity gets cryptographically linked to your Bisq 2 profile ID.\n\
  Though, the exposure is limited to the 'Bisq 1 bridge node' which is operated by a Bisq contributor who has set up a \
  BSQ bond (bonded role).\n\n\
  Account age is an alternative for those who do not want to use burned BSQ or BSQ bonds due to the financial \
  cost. The 'account age' should be at least several months old to reflect some level of trust.
user.reputation.accountAge.score.headline=Impact on reputation score
user.reputation.accountAge.score.info=Importing 'account age' is considered a rather weak form of reputation which is \
  represented by the low weight factor.\n\
  There is a cap of 1 year for the score calculation.\n\n\
  The reputation score is calculated as follows:

user.reputation.accountAge.totalScore=Account age in days (max. 365) * weight

user.reputation.accountAge.howToHeadline=Process for importing your 'account age' from Bisq 1
user.reputation.accountAge.howTo=1. Select the user profile for which you want to attach the reputation.\n\
  2. Copy the 'profile ID'\n\
  3. Open Bisq 1 and go to 'ACCOUNT/NATIONAL CURRENCY ACCOUNTS'. Select your oldest account and click the 'EXPORT ACCOUNT AGE' button. \
  This will create a signature with the given data and copies the result to the clipboard.\n\
  4. Go back to Bisq 2 and click the 'Request authorization' button. This sends the data to the 'Bisq 1 bridge node' for verification and publishing.\n\
  5. After a short delay your 'account age' should be visible in your reputation score.

user.reputation.signedWitness=Signed account age witness
user.reputation.signedWitness.tab1=Why
user.reputation.signedWitness.tab2=Score
user.reputation.signedWitness.tab3=How-to
user.reputation.signedWitness.infoHeadline=Provide trust
user.reputation.signedWitness.info=By linking your Bisq 1 'signed account age witness' you can provide some level of trust.\n\n\
  There are some reasonable expectations that a user who has traded a while back on Bisq 1 and got signed their account is an honest user. But \
  that expectation is weak compared to other forms of reputation where the user provides more "skin in the game" with \
  the use of financial resources.
user.reputation.signedWitness.infoHeadline2=Privacy implications
user.reputation.signedWitness.info2=Linking your Bisq 1 account with Bisq 2 has some implications on your privacy. \
  For verifying your 'signed account age witness' your Bisq 1 identity gets cryptographically linked to your Bisq 2 profile ID.\n\
  Though, the exposure is limited to the 'Bisq 1 bridge node' which is operated by a Bisq contributor who has set up a \
  BSQ bond (bonded role).\n\n\
  Signed account age witness is an alternative for those who don't want to use burned BSQ or BSQ bonds due to the financial \
  burden. The 'signed account age witness' has to be at least 61 days old to be considered for reputation.
user.reputation.signedWitness.score.headline=Impact on reputation score
user.reputation.signedWitness.score.info=Importing 'signed account age witness' is considered a weak form of reputation which is represented by the weight factor. The 'signed account age witness' has to be at least 61 days old and there is a cap of 1 year for the score calculation. \n\n\
  The reputation score is calculated as follows:

user.reputation.signedWitness.totalScore=Witness-age in days (min. 61, max. 365) * weight

user.reputation.signedWitness.howToHeadline=Process for importing your 'signed account age witness' from Bisq 1
user.reputation.signedWitness.howTo=1. Select the user profile for which you want to attach the reputation.\n\
  2. Copy the 'profile ID'\n\
  3. Open Bisq 1 and go to 'ACCOUNT/NATIONAL CURRENCY ACCOUNTS'. Select your oldest signed account and click the 'EXPORT SIGNED WITNESS' button. \
  This will create a signature with the given data and copies the result to the clipboard.\n\
  4. Go back to Bisq 2 and click the 'Request authorization' button. This sends the data to the 'Bisq 1 bridge node' for verification and publishing.\n\
  5. After a short delay your 'signed account age witness' should be visible in your reputation score.

user.reputation.request=Request authorization
user.reputation.request.success=Successfully requested authorization from Bisq 1 bridge node\n\n\
  Your reputation data should now be available in the network.
user.reputation.request.error=Requesting authorization failed. Text from clipboard:\n\{0}

user.reputation.table.headline=Reputation ranking
user.reputation.table.columns.userProfile=User profile
user.reputation.table.columns.profileAge=Profile age
user.reputation.table.columns.reputationScore=Reputation score
user.reputation.table.columns.reputation=Reputation
user.reputation.table.columns.details=Details
user.reputation.table.columns.details.popup.headline=Reputation details
user.reputation.table.columns.details.button=Show details

user.reputation.details.table.columns.source=Type
user.reputation.details.table.columns.lockTime=Lock time
user.reputation.details.table.columns.score=Score


################################################################################
# Roles
################################################################################

user.roles.headline=Bonded roles

user.roles.type.MEDIATOR=Mediator
user.roles.type.ARBITRATOR=Arbitrator
user.roles.type.MODERATOR=Moderator
user.roles.type.ORACLE=Oracle

user.roles.type.MEDIATOR.inline=a mediator
user.roles.type.ARBITRATOR.inline=an arbitrator
user.roles.type.MODERATOR.inline=a moderator
user.roles.type.ORACLE.inline=an oracle operator

user.roles.registration.info=How to become {0}?\n\n\
  1. Copy the public key\n\
  2. Backup your data directory as your key pair is persisted in that directory.\n\
  3. Make a proposal at 'https://github.com/bisq-network/proposals' to become {1} and paste your public key, the user profile name, bot ID and profile ID in the proposal.\n\
  4. After your proposal got reviewed and got support from the community, make a DAO proposal for a bonded role.\n\
  5. After your DAO proposal got accepted in DAO voting lock up the required BSQ bond.\n\
  6. After your bond transaction is confirmed open a GitHub issue at Bisq 2 (https://github.com/bisq-network/bisq2/issues) with your public key, the link to the GitHub proposal and the lockup transaction.\n\
  7. If all the data is correct a Bisq developer will add your public key to the list of authorized keys in the code base.\n\
  8. After you have updated to the latest release come back here and click 'Register'. The 'Register' button will be active if your public key is in the source code.

user.roles.registration.selectedProfile=Selected user profile
user.roles.registration.privateKey=Private key
user.roles.registration.publicKey=Public key
user.roles.registration.register=Register
user.roles.registration.removeRegistration=Remove registration
user.roles.registration.copyPubKey=Copy public key
user.roles.registration.success=Registration was successful.
user.roles.registration.failed=Registration failed.\n\n\{0}

user.roles.removeRegistration.success=Registration was successfully removed.
user.roles.removeRegistration.failed=Remove registration failed.\n\n\{0}

user.roles.table.headline=Registered bonded roles
user.roles.table.columns.userProfile=User profile
user.roles.table.columns.profileAge=Profile age
user.roles.table.columns.role=Role
user.roles.table.columns.pubKey=Public key



