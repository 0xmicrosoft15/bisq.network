/*
 * This file is part of Bisq.
 *
 * Bisq is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or (at
 * your option) any later version.
 *
 * Bisq is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
 * License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Bisq. If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package user;
option java_package = "bisq.user.protobuf";
option java_multiple_files = true;
import "network.proto";
import "security.proto";
import "identity.proto";

message UserProfile {
  string nickName = 1;
  network.NetworkId networkId = 2;
  security.ProofOfWork proofOfWork = 3;
  string terms = 4;
  string statement = 5;
}

message UserIdentity {
  identity.Identity identity = 1;
  UserProfile userProfile = 2;
}

// Stores
message UserIdentityStore {
  repeated UserIdentity userIdentities = 1;
  optional string selectedUserIdentityId = 2;
}

message NymList {
  repeated string nyms = 1;
}

message UserProfileStore {
  map<string, NymList> nymListByNickName = 1;
  repeated string ignoredUserProfileIds = 2;
  map<string, UserProfile> userProfileById = 3;
}

message ProofOfBurnProof {
  string txId = 1;
  uint64 burntAmount = 2;
  uint64 date = 3;
}
message BondedRoleProof {
  string txId = 1;
  string signature = 2;
}
message InvitationProof {
  string invitationCode = 1;
}

message AccountAgeStore {
  repeated string jsonRequests = 1;
  uint64 lastRequested = 2;
}

message SignedWitnessStore {
  repeated string jsonRequests = 1;
  uint64 lastRequested = 2;
}

message ProfileAgeStore {
  repeated string profileIds = 1;
  uint64 lastRequested = 2;
}

enum RoleType {
  MEDIATOR = 0;
  ARBITRATOR = 1;
  MODERATOR = 2;
  ORACLE = 3;
}

message AuthorizedRoleRegistrationData {
  UserProfile userProfile = 1;
  RoleType roleType = 2;
  string publicKeyAsHex = 3;
}

message RoleRegistrationServiceStore {
  repeated AuthorizedRoleRegistrationData myRegistrations = 1;
}
    